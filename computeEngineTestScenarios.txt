Тестовый сценарий "Calculate price test" предназначен для задания требуемой конфигурации оборудования облачных вычислений сервиса Google Cloud, подсчёта месячной стоимости заданной конфигурации и проверки корректности рассчитанной стоимости в сформированной смете. Исходный код тестового сценария описан в файле CalculatePriceTest.java и состоит из следующей последовательности тест-кейсов:

	enterToCloudSearchPage()
		- Открытие интернет-браузера и переход на веб-страницу сервиса Google Cloud по адресу "https://cloud.google.com/search";
		- Проверка соответствия заголовка веб-страницы требуемому "Search | Google Cloud".
	
	1. searchingRequiredContent()
		- В поле поиска открытой веб-страницы ввести поисковой запрос "Google Cloud Pricing Calculator" и нажать Enter для поиска;
		- Выбор релевантного ответа из полученных результутов и переход на страницу путём клика по сформированной ссылке на ресурс;
		- Проверка того, что был произведён переход на веб-страницу по адресу "https://cloud.google.com/products/calculator".
			
	2. chooseCategoryToEstimate()
		- Проверка соответствия заголовка веб-страницы требуемому "Google Cloud Pricing Calculator";
		- Проверка наличия на открытой веб-странице приветственной надписи "Welcome to Google Cloud's pricing calculator";
		- Нажатие на кнопку "+ Add to eatimate";
		- В появившемся попапе выбор категории "Compute Engine" и нажатие на карту с этим разделом.
		
	3. setupEquipmentConfiguration()
		- Проверка наличия заголовка выбранной категории "Compute Engine" в открывшемся меню калькулятора;
		- Ввод значения количества экземпляров в поле "Number of Instances*" - значение "4";
		- Выбор из выпадающего списка желаемой операционной системы в поле "Operating System / Software*" - установка варианта "Free: Debian, CentOS, CoreOS, Ubuntu or BYOL (Bring Your Own License)";
		- В разделе "Provisioning model" выбор "Regular" путём клика по соответствующей кнопке;
		- В разделе "Machine Type*" выбор из выпадающего списка в поле "Series*" - установка варианта "N1";
		- В разделе "Machine Type*" выбор из выпадающего списка в поле "Machine Type*" - установка варианта "n1-standard-8";
		- В разделе "Boot disk type" выбор "Balanced persistent disk" путём клика по соответствующей кнопке;
		- В разделе "Boot disk size (GiB)" в поле ввести значени "30";
		- Нажатие свитча "Add sustained use discounts";
		- Нажатие свичта "Add GPUs";
		- Выбор из выпадающего списка в поле "GPU Model" варианта "NVIDIA TESLA P100";
		- Выбор из выпадающего списка в поле "Number of GPUs" варианта "1";
		- Выбор из выпадающего списка в поле "Local SSD" варианта "2X375 GB";
		- Выбор из выпадающего списка в поле "Region*" варианта "Belgium (europe-west1)";
		- В разделе "Committed use discount options" выбор "1 year" путём клика по соответствующей кнопке;
		- Просмотр рассчитанной общей стоимости в боковом меню справа в строке "Estimated Cost".
	
	4. validationOfMachineType()
		- Скроллинг вверх по странице до раздела "Machine Type*";
		- Выделение цветом блока описания "Machine Type";
		- Проверка правильности формирования блока "Machine Type" путём сравнения типа в блоке и выбранного в соответствующем выпадающем списке.

	5. validationOfChosenCPUsAndRAM()
		- Проверка соответствия количества параметра "vCPUs" выбранного типа в сформированном блоке со значением на соответствующем ползунке "Number of vCPUs";
		- Проверка соответствия количества параметра "RAM" выбранного типа в сформированном блоке со значением на соответствующем ползунке "Amount of memory".
		
	6. compareOfCalculatedPriceResult()
		- Выделение цветом рассчитанной стоимости конфигурации в правом сайдбаре "Cost details";
		- Создание скриншота текущего состояния интернет-браузера;
		- Проверка соответствия значения рассчитанной стоимости в правом сайдбаре "Cost details" со значением в верхнем заглавном блоке "Compute engine".
		
	7. checkingDetailedInformationOfTotalCost()
		- Нажатие на иконку "More options" в правом сайдбаре;
		- В открывшемся подменю выбор раздела "View details" и нажатие на соответствующий элемент;
		- В появившемся попапе выбор всех строк, в которых указана цена: Machine type, Number of GPUs, Local SSD, Boot disk size (GiB);
		- Суммирование значений цен из выбранных строк;
		- Сравнение результирующей суммы со значением в верхнем заглавном блоке "Compute engine";
		- Закрытие попапа нажатием на иконку "Close dialog".
		
	8. viewEstimateSummaryPage()
		- Открытие детальной сметы выбранного оборудования в новой вкладке интернет-браузера путём нажатия на иконку "Open detailed view" в правом сайдбаре "Cost details";
		- Проверка заголовка открывшейся веб-страницы сметы на соответствие требуемому "Google Cloud Estimate Summary".
		
	9. validateEstimatedCostFromSummaryPage()
		- Проверка соответствия значения рассчитанной стоимости "Total estimated cost" во вкладке с открытой сметой значению "ESTIMATED COST" в правом сайдбаре на веб-странице калькулятора.
		
		
		
Тестовый сценарий "Number fields test" предназначен для проверки корректности работы полей ввода цифровых значений "Number of instances*", "Total instance usage time*" и "Boot disk size (GiB)" на веб-странице калькулятора сервиса Google Cloud при помощи использования техники граничных значений.
	
	 enterToPricingCalculatorPage()
		- Открытие интернет-браузера и переход на веб-страницу калькулятора сервиса Google Cloud по адресу "https://cloud.google.com/products/calculator";
		- Проверка соответствия заголовка веб-страницы требуемому "Google Cloud Pricing Calculator".
		
	1. chooseCategoryToEstimate()
		- Проверка наличия на открытой веб-странице приветственной надписи "Welcome to Google Cloud's pricing calculator";
		- Нажатие на кнопку "+ Add to eatimate";
		- В появившемся попапе выбор категории "Compute Engine" и нажатие на карту с этим разделом.
	
	2. checkNumberOfInstancesField()
		- Проверка появления предупреждающей надписи "Required field" при удалении значения в поле ввода количества экземпляров "Number of Instances*";
		- Ввод нолевого значения в поле "Number of Instances*" и проверка появления предупреждающей надписи "Value needs to be greater than 0 and less than or equal to 50,000";
		- Ввод минимального значения "1" из допустимого диапазона диапазона в поле "Number of Instances*" и проверка отсутствия предупреждающих надписей "Required field" и "Value needs to be greater than 0 and less than or equal to 50,000";
		- Ввод значения "50001", превышаюшего допустимый диапазон в поле "Number of Instances*" и проверка появления предупреждающей надписи "Value needs to be greater than 0 and less than or equal to 50,000";
		- Ввод максимального значения "50000" из допустимого диапазона диапазона в поле "Number of Instances*" и проверка отсутствия предупреждающих надписей "Required field" и "Value needs to be greater than 0 and less than or equal to 50,000";
		- Очистка поля "Number of Instances*" и ввод минимального значения "1".
		
	3. checkTotalInstancesUsageTimeField()
		- Проверка появления предупреждающей надписи "Required field" при удалении значения в поле ввода времени использования "Total instance usage time*";
		- Ввод нолевого значения в поле "Total instance usage time*" и проверка появления предупреждающей надписи "Value needs to be greater than 0 and less than or equal to 36,500,000";
		- Ввод минимального значения "1" из допустимого диапазона диапазона в поле "Total instance usage time*" и проверка отсутствия предупреждающих надписей "Required field" и "Value needs to be greater than 0 and less than or equal to 36,500,000";
		- Ввод значения "36500001", превышаюшего допустимый диапазон в поле "Total instance usage time*" и проверка появления предупреждающей надписи "Value needs to be greater than 0 and less than or equal to 36,500,000";
		- Ввод максимального значения "3650000" из допустимого диапазона диапазона в поле "Total instance usage time*" и проверка отсутствия предупреждающих надписей "Required field" и "Value needs to be greater than 0 and less than or equal to 36,500,000";
		- Очистка поля "Total instance usage time*" и ввод значения "730", соответсвующего минимальному значению в соседнем поле "Number of Instances*".
		
	4. checkBootDiskSizeField()
		- Вертикальная прокрутка веб-станицы до поля ввода "Boot disk size (GiB)";
		- Провека наличия кликабельности у кнопок увеличения и уменьшения (элементов инкремента и декремента) "+" и "-" при стоящем в поле исходном значении "20";
		- Ввод нолевого значения в поле ввода "Boot disk size (GiB)" и проверка отсутствия кликабельности у кнопки уменьшения "-";
		- Ввод минимального значения "10" из допустимого диапазона диапазона в поле "Boot disk size (GiB)" и проверка отсутствия кликабельности у кнопки уменьшения "-";
		- Ввод значения "11" из допустимого диапазона в поле "Boot disk size (GiB)" и проверка наличия кликабельности у кнопки уменьшения "-";
		- Ввод значения "65535" из допустимого диапазона в поле "Boot disk size (GiB)" и проверка наличия кликабельности у кнопки увеличения "+";
		- Ввод максимального значения "65636" из допустимого диапазона в поле "Boot disk size (GiB)" и проверка отсутствия кликабельности у кнопки увеличения "+";
		- Ввод значения "65637", превышающего допустимый диапазон в поле "Boot disk size (GiB)" и проверка отсутствия кликабельности у кнопки увеличения "+";
		- Ввод значения "9", являющегося меньшим чем минимально допустимое в поле "Boot disk size (GiB)" и проверка отсутствия кликабельности у кнопки уменьшения "-".
			(на момент написания актуальной версии наястоящего программного решения при вводе значений от 1 до 9 кнопка декремента является кликабельной. Тест-кейс падает с ассертом true - является неуспешным)
			
			
			
Оба тестовых сценария можно запускать как по отдельности, так и совместно из файла конфигурации тестов computeEngineSuite.xml.